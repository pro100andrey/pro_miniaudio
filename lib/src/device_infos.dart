part of 'library.dart';

/// Represents a collection of audio devices. (Internal)
///
/// The `DeviceInfos` class encapsulates a list of audio devices, each
/// containing information about their unique identifier, name, and default
/// status. This class is typically used to enumerate available audio devices
/// or configure audio pipelines.
class DeviceInfos extends NativeResource<device_infos_t> {
  /// Constructs a `DeviceInfos` instance. (Internal)
  DeviceInfos._(super.ptr) : super._(externalSize: sizeOf<device_infos_t>());

  @override
  NativeFinalizer get finalizer => Library._deviceInfosFinalizer;

  /// Returns the number of audio devices.
  ///
  /// This property returns the number of audio devices in the system.
  /// The value is obtained by querying the internal data structure.
  int get count => _resource.ref.count;

  /// Retrieves a list of audio devices.
  ///
  /// This method returns a list of [DeviceInfo] instances, each representing
  /// an audio device in the system. The list is generated by iterating over
  /// the internal data structure and extracting information from each device.
  ///
  List<DeviceInfo> getList() {
    final devices = _resource.ref.list;

    return List.generate(count, (i) {
      final nativeDeviceInfo = devices[i];

      final idPointer = malloc.allocate<device_id>(sizeOf<device_id>())
        ..ref = nativeDeviceInfo.id;

      final id = DeviceId._(idPointer);

      return DeviceInfo(
        id: id,
        name: arrayCharToString(nativeDeviceInfo.name),
        isDefault: nativeDeviceInfo.isDefault,
      );
    });
  }

  /// Releases the native resource.
  ///
  /// This method releases the native resource and frees any associated memory.
  @override
  void releaseResource() {
    _bindings.audio_context_device_infos_destroy(_resource);
  }
}
